
CREATE OR REPLACE VIEW CA_OBJECT_CODE_V AS
    (SELECT        C.UNIV_FISCAL_YR,        FIN_COA_CD,        FIN_OBJECT_CD,        FIN_OBJ_CD_NM,        FIN_OBJ_CD_SHRT_NM,        FIN_OBJ_LEVEL_CD,    
    RPTS_TO_FIN_COA_CD,        RPTS_TO_FIN_OBJ_CD ,        FIN_OBJ_TYP_CD,        FIN_OBJ_SUB_TYP_CD,        HIST_FIN_OBJECT_CD,        FIN_OBJ_ACTIVE_CD,  
      FOBJ_BDGT_AGGR_CD,        FOBJ_MNXFR_ELIM_CD,        FIN_FED_FUNDED_CD,        NXT_YR_FIN_OBJ_CD,        RSCH_BDGT_CTGRY_CD,        RSCH_OBJ_CD_DESC,
        RSCH_ON_CMP_IND        FROM CA_OBJECT_CODE_T C, SH_UNIV_DATE_T S WHERE C.UNIV_FISCAL_YR = S.UNIV_FISCAL_YR AND UNIV_DT = TRUNC(SYSDATE));


CREATE OR REPLACE VIEW CA_SUB_OBJECT_CD_V AS
    (SELECT        C.UNIV_FISCAL_YR,        FIN_COA_CD,        ACCOUNT_NBR,        FIN_OBJECT_CD,        FIN_SUB_OBJ_CD,        
FIN_SUB_OBJ_CD_NM,        FIN_SUBOBJ_SHRT_NM,        FIN_SUBOBJ_ACTV_CD FROM CA_SUB_OBJECT_CD_T C, SH_UNIV_DATE_T S 
WHERE C.UNIV_FISCAL_YR = S.UNIV_FISCAL_YR AND UNIV_DT = TRUNC(SYSDATE));


CREATE OR REPLACE VIEW END_KEMID_CRNT_BAL_DET_V AS
   SELECT      B.kemid    , B.hldg_ip_ind    , CASE WHEN R.SEC_RPT_GRP != 'CSHEQ' THEN        SUM(b.HLDG_MVAL)      ELSE    
    CASE WHEN b.hldg_ip_ind = 'I' THEN            A.CRNT_INC_CSH + SUM(B.HLDG_MVAL)        ELSE            
a.CRNT_PRIN_CSH + SUM(B.HLDG_MVAL)        END      END AS VAL_AT_MARKET    , R.SEC_RPT_GRP AS SEC_RPT_GRP    , 
SUM(b.HLDG_ANNL_INC_EST) AS ANN_INC_EST    , SUM(b.HLDG_FY_REM_EST_INC) AS FY_REM_EST_INC    , SUM(b.HLDG_NEXT_FY_EST_INC) AS NEXT_FY_EST_INC FROM      
  END_CRNT_TAX_LOT_BAL_T B    , END_SEC_T S    , END_CLS_CD_T CL    , END_SEC_RPT_GRP_T R    , END_CRNT_CSH_T A  WHERE        S.SEC_ID = B.SEC_ID    
AND S.SEC_CLS_CD = CL.SEC_CLS_CD    AND CL.SEC_RPT_GRP = R.SEC_RPT_GRP    AND A.kemid = B.kemid GROUP BY      B.kemid    , R.SEC_RPT_GRP    , 
B.hldg_ip_ind    , A.CRNT_INC_CSH    , a.CRNT_PRIN_CSH;


CREATE OR REPLACE VIEW END_KEMID_CRNT_BAL_V AS
    SELECT    A.kemid    , a.CRNT_INC_CSH + SUM( CASE WHEN E.hldg_IP_IND = 'I' THEN e.hldg_mval ELSE 0.00 END ) AS INC_AT_MARKET, 
a.CRNT_PRIN_CSH + SUM( CASE WHEN E.hldg_IP_IND = 'P' THEN e.hldg_mval ELSE 0.00 END ) AS PRIN_AT_MARKET    , 
a.CRNT_PRIN_CSH + a.CRNT_INC_CSH + SUM( e.hldg_mval ) AS TOTAL_MARKET_VAL    , SUM(HLDG_ANNL_INC_EST) AS ANN_EST_INC    , 
SUM(HLDG_FY_REM_EST_INC) AS FY_REM_EST_INC    , SUM(HLDG_NEXT_FY_EST_INC) AS NEXT_FY_EST_INC FROM END_CRNT_CSH_T A,
 END_CRNT_TAX_LOT_BAL_T E WHERE a.kemid = e.kemid GROUP BY A.kemid, A.CRNT_PRIN_CSH, a.CRNT_INC_CSH;


CREATE OR REPLACE VIEW END_KEMID_CRNT_REP_GRP_V AS
    select C.KEMID,CL.SEC_RPT_GRP,C.sec_id,C.regis_cd,C.HLDG_IP_IND,sum(C.HLDG_UNITS) as UNITS,sum(HLDG_COST) as CARRY_VAL,
sum(HLDG_MVAL) as MARKET_VAL,sum(HLDG_NEXT_FY_EST_INC) as NEXT_FY_EST_INC,sum(HLDG_FY_REM_EST_INC) as FY_REM_EST_INC,
sum(HLDG_ANNL_INC_EST) as ANNL_INC_EST from END_CRNT_TAX_LOT_BAL_T C, END_SEC_T S, END_CLS_CD_T CL 
where C.sec_id = S.sec_id and s.SEC_CLS_CD = CL.SEC_CLS_CD group by C.KEMID, CL.SEC_RPT_GRP, C.HLDG_IP_IND, C.sec_id, C.regis_cd;


CREATE OR REPLACE VIEW END_KEMID_HIST_BAL_DET_V AS
    SELECT    B.kemid    , B.hldg_ip_ind    ,    CASE        WHEN B.hldg_ip_ind = 'I'            THEN A.HIST_INC_CSH + SUM(B.HLDG_MVAL)   
         ELSE A.HIST_PRIN_CSH + SUM(B.HLDG_MVAL) END AS VAL_AT_MARKET, R.SEC_RPT_GRP AS SEC_RPT_GRP, SUM(B.HLDG_ANNL_INC_EST) AS ANN_INC_EST, 
         SUM(B.HLDG_FY_REM_EST_INC) AS FY_REM_EST_INC    , SUM(B.HLDG_NEXT_FY_EST_INC) AS NEXT_FY_EST_INC, B.ME_DT_ID 
         FROM  END_HIST_CSH_T A, END_HLDG_HIST_T B, END_SEC_T S, END_CLS_CD_T CL, END_SEC_RPT_GRP_T R WHERE S.SEC_ID = B.SEC_ID 
         AND S.SEC_CLS_CD = CL.SEC_CLS_CD    AND CL.SEC_RPT_GRP = R.SEC_RPT_GRP    AND a.KEMID = b.KEMID 
         AND a.ME_DT_ID = b.ME_DT_ID GROUP BY B.kemid, R.SEC_RPT_GRP, B.hldg_ip_ind, B.ME_DT_ID, a.HIST_INC_CSH, a.HIST_PRIN_CSH;



CREATE OR REPLACE VIEW END_KEMID_HIST_BAL_V AS
    SELECT    A.kemid, a.ME_DT_ID    , a.HIST_INC_CSH + SUM( CASE WHEN E.hldg_IP_IND = 'I' THEN e.hldg_mval ELSE 0.00 END ) AS INC_AT_MARKET,
 a.HIST_PRIN_CSH + SUM( CASE WHEN E.hldg_IP_IND = 'P' THEN e.hldg_mval ELSE 0.00 END ) AS PRIN_AT_MARKET    ,
 a.HIST_PRIN_CSH + a.HIST_INC_CSH + SUM( e.hldg_mval ) AS TOTAL_MARKET_VAL    , SUM(HLDG_ANNL_INC_EST) AS ANN_EST_INC,
 SUM(HLDG_FY_REM_EST_INC) AS FY_REM_EST_INC    , SUM(HLDG_NEXT_FY_EST_INC) AS NEXT_FY_EST_INC 
 FROM      END_HIST_CSH_T A    , END_HLDG_HIST_T E WHERE a.kemid = e.kemid  AND 
a.ME_DT_ID = e.ME_DT_ID GROUP BY A.kemid, a.ME_DT_ID, A.HIST_PRIN_CSH, a.HIST_INC_CSH;


CREATE OR REPLACE VIEW END_KEMID_HIST_REP_GRP_V AS
    select C.KEMID,CL.SEC_RPT_GRP,C.sec_id,C.regis_cd,C.HLDG_IP_IND,sum(C.HLDG_UNITS) as UNITS,
sum(HLDG_COST) as CARRY_VAL,sum(HLDG_MVAL) as MARKET_VAL,sum(HLDG_NEXT_FY_EST_INC) as NEXT_FY_EST_INC,sum(HLDG_FY_REM_EST_INC) as FY_REM_EST_INC,
sum(HLDG_ANNL_INC_EST) as ANNL_INC_EST,C.ME_DT_ID 
from END_HLDG_HIST_T C, END_SEC_T S, END_CLS_CD_T CL 
where C.sec_id = S.sec_id and s.SEC_CLS_CD = CL.SEC_CLS_CD 
group by C.KEMID, CL.SEC_RPT_GRP, C.HLDG_IP_IND, C.sec_id, C.regis_cd, C.ME_DT_ID;


CREATE OR REPLACE VIEW PUR_PO_ITM_TOT_AMT_V AS
    (select fdoc_nbr, sum(CASE WHEN ITM_ACTV_IND = 'Y' AND ITM_ORD_QTY IS NULL THEN ITM_UNIT_PRC  WHEN ITM_ACTV_IND = 'Y' AND ITM_ORD_QTY
 IS NOT NULL THEN ITM_ORD_QTY * ITM_UNIT_PRC  WHEN ITM_ACTV_IND IS NULL AND ITM_ORD_QTY IS NULL THEN ITM_UNIT_PRC WHEN ITM_ACTV_IND IS NULL AND 
ITM_ORD_QTY IS NOT NULL THEN ITM_ORD_QTY * ITM_UNIT_PRC  WHEN ITM_ACTV_IND ='N' THEN 0 ELSE 0 END) as TOTAL_AMOUNT  
 from PUR_PO_ITM_T group by fdoc_nbr);


CREATE OR REPLACE VIEW PUR_PO_ITM_TOT_ENC_V AS
    (select a.FDOC_NBR AS fdoc_nbr, sum(a.ITM_OSTND_ENC_AMT) AS TOTAL_ENCUMBRANCE 
   from pur_po_itm_t a group by a.FDOC_NBR);


CREATE OR REPLACE VIEW PUR_PO_V AS
    select p.AP_PUR_DOC_LNK_ID,  p.PO_ID,    p.PO_CUR_IND,   p.FDOC_NBR,   p.OBJ_ID,  p.PO_STAT_CD,  p.RECUR_PMT_TYP_CD,  
    p.PO_VNDR_CHC_CD,  p.PO_END_DT,  e.TOTAL_ENCUMBRANCE,  
    summation.TOTAL_AMOUNT  from pur_po_t p,   pur_po_itm_tot_enc_v e,   pur_po_itm_tot_amt_v summation
    where p.FDOC_NBR = e.FDOC_NBR   and p.FDOC_NBR = summation.FDOC_NBR;